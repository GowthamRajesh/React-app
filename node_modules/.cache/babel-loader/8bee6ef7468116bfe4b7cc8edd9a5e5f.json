{"ast":null,"code":"import qs from 'qs';\nfunction oauth(axios, _ref) {\n  let {\n    url,\n    ...credentials\n  } = _ref;\n  return function () {\n    let moreCredentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const body = {\n      ...credentials,\n      ...moreCredentials\n    };\n    if (\"scope\" in body && !body.scope) {\n      delete body.scope;\n    }\n    return axios({\n      url,\n      method: \"post\",\n      data: qs.stringify(body)\n    }).then(res => res.data);\n  };\n}\nfunction authorizationCode(axios, url, client_id, client_secret, redirect_uri) {\n  let code = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let scope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"authorization_code\",\n    client_id,\n    client_secret,\n    redirect_uri,\n    code,\n    scope\n  });\n  return function () {\n    let code2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let scope2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return grant({\n      code: code2,\n      scope: scope2\n    });\n  };\n}\nfunction clientCredentials(axios, url, client_id, client_secret) {\n  let scope = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"client_credentials\",\n    client_id,\n    client_secret,\n    scope\n  });\n  return scope2 => grant(scope2 ? {\n    scope: scope2\n  } : null);\n}\nfunction ownerCredentials(axios, url, client_id, client_secret) {\n  let username = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let password = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  let scope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"password\",\n    client_id,\n    client_secret,\n    username,\n    password,\n    scope\n  });\n  return function () {\n    let username2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let password2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let scope2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return grant({\n      username: username2,\n      password: password2,\n      scope: scope2\n    });\n  };\n}\nfunction refreshToken(axios, url, client_id, client_secret) {\n  let refresh_token = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  let scope = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"refresh_token\",\n    client_id,\n    client_secret,\n    refresh_token,\n    scope\n  });\n  return function () {\n    let refresh_token2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let scope2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return grant({\n      refresh_token: refresh_token2,\n      scope: scope2\n    });\n  };\n}\nconst index = {\n  authorizationCode,\n  clientCredentials,\n  ownerCredentials,\n  refreshToken\n};\nexport { index as default };","map":{"version":3,"names":["qs","oauth","axios","url","credentials","moreCredentials","body","scope","method","data","stringify","then","res","authorizationCode","client_id","client_secret","redirect_uri","code","grant","grant_type","code2","scope2","clientCredentials","ownerCredentials","username","password","username2","password2","refreshToken","refresh_token","refresh_token2","index","default"],"sources":["F:/Konnectify Projets/Zee5 Frontend/node_modules/axios-oauth-client/dist/index.mjs"],"sourcesContent":["import qs from 'qs';\n\nfunction oauth(axios, { url, ...credentials }) {\n  return (moreCredentials = {}) => {\n    const body = {\n      ...credentials,\n      ...moreCredentials\n    };\n    if (\"scope\" in body && !body.scope) {\n      delete body.scope;\n    }\n    return axios({\n      url,\n      method: \"post\",\n      data: qs.stringify(body)\n    }).then((res) => res.data);\n  };\n}\n\nfunction authorizationCode(axios, url, client_id, client_secret, redirect_uri, code = null, scope = null) {\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"authorization_code\",\n    client_id,\n    client_secret,\n    redirect_uri,\n    code,\n    scope\n  });\n  return (code2 = null, scope2 = null) => grant({ code: code2, scope: scope2 });\n}\n\nfunction clientCredentials(axios, url, client_id, client_secret, scope = null) {\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"client_credentials\",\n    client_id,\n    client_secret,\n    scope\n  });\n  return (scope2) => grant(scope2 ? { scope: scope2 } : null);\n}\n\nfunction ownerCredentials(axios, url, client_id, client_secret, username = null, password = null, scope = null) {\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"password\",\n    client_id,\n    client_secret,\n    username,\n    password,\n    scope\n  });\n  return (username2 = null, password2 = null, scope2 = null) => grant({ username: username2, password: password2, scope: scope2 });\n}\n\nfunction refreshToken(axios, url, client_id, client_secret, refresh_token = null, scope = null) {\n  const grant = oauth(axios, {\n    url,\n    grant_type: \"refresh_token\",\n    client_id,\n    client_secret,\n    refresh_token,\n    scope\n  });\n  return (refresh_token2 = null, scope2 = null) => grant({ refresh_token: refresh_token2, scope: scope2 });\n}\n\nconst index = {\n  authorizationCode,\n  clientCredentials,\n  ownerCredentials,\n  refreshToken\n};\n\nexport { index as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}